export enum ERRORS_DICTIONARY {
  // AUTH
  AUTH_EMAIL_EXISTED = 'ATH_0091',
  AUTH_EMAIL_NOT_EXISTED = 'ATH_0041',
  AUTH_WRONG_CREDENTIALS = 'ATH_0031',
  AUTH_CONTENT_NOT_MATCH = 'ATH_0032',
  AUTH_PASSWORD_NOT_MATCH = 'ATH_0033',
  AUTH_OTP_NOT_MATCH = 'OTP_0034',
  AUTH_UNAUTHORIZED_EXCEPTION = 'ATH_0011',
  AUTH_TOKEN_EXPIRED = 'ATH_0012',
  AUTH_INVALID_TOKEN = 'ATH_0013',

  AUTH_TOKEN_RESET_EXEEDED_LIMIT = 'ATH_0291',

  //OTP
  OTP_EXCEEDED_LIMIT = 'OTP_0291',
  OTP_EMAIL_EXISTED = 'OTP_0091',

  // USER
  USER_NOT_FOUND = 'USR_0041',
  USER_ALREADY_EXIST = 'USR_0091',
  USER_CONFLICT_ADMIN = 'USR_0092',
  USER_DISABLED = 'USR_0043',
  USER_NEW_PASSWORD_NOT_MATCH_OLD = 'USR_0031',
  USER_CONFIRM_PASSWORD_NOT_MATCH = 'USR_0032',
  USER_NOT_ACCEPTED_ROLE = 'USR_0033',

  // BUSINESS
  BUSINESS_ALREADY_EXIST = 'BUS_0040',
  BUSINESS_INVALID_STATUS_ACTION = 'BUS_0140',
  BUSINESS_FORBIDDEN = 'BUS_0043',
  BUSINESS_NOT_FOUND = 'BUS_0044',
  BUSINESS_DISABLED = 'BUS_0143',

  //UPLOAD FILE
  UPLOAD_FILE_SIZE_EXCEEDED = 'FILE_0131',
  UPLOAD_FILE_TYPE_INVALID = 'FILE_0091',

  // CLASS VALIDATOR
  VALIDATION_ERROR = 'CVL_0001',
  INVALID_INPUT = 'CVL_0002',
}

export const ERROR_MESSAGES = {
  // AUTH
  //UPLOAD FILE
  [ERRORS_DICTIONARY.UPLOAD_FILE_SIZE_EXCEEDED]:
    'File size exceeded limit. (Not over 1024MB)',
  [ERRORS_DICTIONARY.UPLOAD_FILE_TYPE_INVALID]:
    'File type is invalid. (Only accept: jpg, jpeg, png)',

  //AUTH
  [ERRORS_DICTIONARY.AUTH_EMAIL_EXISTED]: 'Email already exists.',
  [ERRORS_DICTIONARY.AUTH_EMAIL_NOT_EXISTED]: 'Email not exists.',
  [ERRORS_DICTIONARY.AUTH_WRONG_CREDENTIALS]: 'Incorrect username or password.',
  [ERRORS_DICTIONARY.AUTH_CONTENT_NOT_MATCH]: 'Content does not match.',
  [ERRORS_DICTIONARY.AUTH_UNAUTHORIZED_EXCEPTION]: 'Unauthorized access.',
  [ERRORS_DICTIONARY.AUTH_OTP_NOT_MATCH]: 'OTP does not match.',

  [ERRORS_DICTIONARY.AUTH_TOKEN_EXPIRED]: 'Token has expired.',
  [ERRORS_DICTIONARY.AUTH_INVALID_TOKEN]: 'Invalid token.',
  [ERRORS_DICTIONARY.AUTH_PASSWORD_NOT_MATCH]: 'Password does not match.',
  [ERRORS_DICTIONARY.AUTH_TOKEN_RESET_EXEEDED_LIMIT]:
    'Token for reset password exceeded limit.',

  //OTP
  [ERRORS_DICTIONARY.OTP_EXCEEDED_LIMIT]: 'OTP exceeded limit.',

  //USER
  [ERRORS_DICTIONARY.USER_NOT_FOUND]: 'User not found.',
  [ERRORS_DICTIONARY.USER_ALREADY_EXIST]: 'User already exists.',
  [ERRORS_DICTIONARY.USER_DISABLED]: 'User is disabled.',
  [ERRORS_DICTIONARY.USER_NEW_PASSWORD_NOT_MATCH_OLD]:
    'New password does not match with old password.',
  [ERRORS_DICTIONARY.USER_CONFIRM_PASSWORD_NOT_MATCH]:
    'Confirm password does not match.',
  [ERRORS_DICTIONARY.USER_NOT_ACCEPTED_ROLE]: "Role's User aren't accepted.",
  [ERRORS_DICTIONARY.USER_CONFLICT_ADMIN]:
    "Admins can't express procedures for themselves",

  //BUSINESS
  [ERRORS_DICTIONARY.BUSINESS_NOT_FOUND]: 'Business not found.',
  [ERRORS_DICTIONARY.BUSINESS_INVALID_STATUS_ACTION]:
    'Invalid status action for business.',
  [ERRORS_DICTIONARY.BUSINESS_ALREADY_EXIST]: 'Business already exists.',
  [ERRORS_DICTIONARY.BUSINESS_DISABLED]: 'Business is disabled.',
  [ERRORS_DICTIONARY.BUSINESS_FORBIDDEN]: 'Business forbidden.',

  // CLASS VALIDATOR
  [ERRORS_DICTIONARY.VALIDATION_ERROR]: 'Validation error.',
  [ERRORS_DICTIONARY.INVALID_INPUT]: 'Invalid input.',
};

export const ERROR_CODES = {
  // BUSINESS
  [ERRORS_DICTIONARY.BUSINESS_FORBIDDEN]: 403,
  [ERRORS_DICTIONARY.BUSINESS_NOT_FOUND]: 404,

  // CLASS VALIDATOR
  [ERRORS_DICTIONARY.VALIDATION_ERROR]: 400,
  [ERRORS_DICTIONARY.INVALID_INPUT]: 400,
};

// Path: packages/backend/src/common/constants/upload.constant.ts
